[1mdiff --git a/server/app.js b/server/app.js[m
[1mindex ac6fd72..0633338 100644[m
[1m--- a/server/app.js[m
[1m+++ b/server/app.js[m
[36m@@ -1,10 +1,11 @@[m
 const express = require("express");[m
 const { graphqlHTTP } = require('express-graphql');[m
[32m+[m[32mconst schema = require("./schema/schema");[m
 [m
 const app = express();[m
 [m
 app.use('/graphql', graphqlHTTP({[m
[31m-[m
[32m+[m[32m    schema: schema[m
 }));[m
 [m
 app.listen(8080,()=> {[m
[1mdiff --git a/server/schema/schema.js b/server/schema/schema.js[m
[1mindex e69de29..0d5f978 100644[m
[1m--- a/server/schema/schema.js[m
[1m+++ b/server/schema/schema.js[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mconst graphql = require("graphql");[m
[32m+[m
[32m+[m[32mconst { GraphQlObjectType, GraphQlString, GraphQLSchema } = graphql;[m
[32m+[m
[32m+[m[32mconst BookType = new GraphQlObjectType({[m
[32m+[m[32m    name: "Book",[m
[32m+[m[32m    fields:() => ({[m
[32m+[m[32m        id: {type: GraphQlString},[m
[32m+[m[32m        name: {type: GraphQlString},[m
[32m+[m[32m        genre: {type: GraphQlString}[m
[32m+[m[32m    })[m[41m [m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst RootQuery = new GraphQlObjectType({[m
[32m+[m[32m    name: "RootQueryType",[m
[32m+[m[32m    fields:{[m
[32m+[m[32m        book:{[m
[32m+[m[32m            type: BookType,[m
[32m+[m[32m            args: {id: {type: GraphQlString}},[m
[32m+[m[32m            resolve(parent, args){[m
[32m+[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mmodule.exports = new GraphQLSchema({[m
[32m+[m[32m    query: RootQuery[m
[32m+[m[32m});[m
\ No newline at end of file[m
